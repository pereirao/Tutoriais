// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<div
  className="generatorWrapper"
>
  <Dropdown
    additionLabel="Add "
    additionPosition="top"
    className="reportTypeSelect"
    closeOnBlur={true}
    icon="dropdown"
    minCharacters={1}
    noResultsMessage="No results found."
    onChange={[Function]}
    openOnFocus={true}
    options={
      Array [
        Object {
          "text": "Orders",
          "value": "ORDERS",
        },
        Object {
          "text": "Driver Tips",
          "value": "TIPS",
        },
        Object {
          "text": "Itemized Orders",
          "value": "ITEMIZED_ORDERS",
        },
        Object {
          "text": "Adjustments",
          "value": "ADJUSTMENTS",
        },
      ]
    }
    placeholder="Select Report Type"
    renderLabel={[Function]}
    selectOnBlur={true}
    selection={true}
  />
  <SingleDatePicker
    anchorDirection="right"
    customCloseIcon={null}
    customInputIcon={null}
    date={null}
    daySize={39}
    disabled={false}
    displayFormat={[Function]}
    enableOutsideDays={false}
    focused={false}
    hideKeyboardShortcutsPanel={true}
    horizontalMargin={0}
    id="date"
    initialVisibleMonth={null}
    isDayBlocked={[Function]}
    isDayHighlighted={[Function]}
    isOutsideRange={[Function]}
    isRTL={false}
    keepOpenOnDateSelect={false}
    monthFormat="MMMM YYYY"
    navNext={null}
    navPrev={null}
    numberOfMonths={1}
    onClose={[Function]}
    onDateChange={[Function]}
    onFocusChange={[Function]}
    onNextMonthClick={[Function]}
    onPrevMonthClick={[Function]}
    orientation="horizontal"
    phrases={
      Object {
        "chooseAvailableDate": [Function],
        "clearDate": "Clear Date",
        "closeDatePicker": "Close",
        "dateIsUnavailable": [Function],
        "enterKey": "Enter key",
        "escape": "Escape key",
        "hideKeyboardShortcutsPanel": "Close the shortcuts panel",
        "homeEnd": "Home and end keys",
        "jumpToNextMonth": "Move forward to switch to the next month",
        "jumpToPrevMonth": "Move backward to switch to the previous month",
        "keyboardNavigationInstructions": "Press the down arrow key to interact with the calendar and
        select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
        "keyboardShortcuts": "Keyboard Shortcuts",
        "leftArrowRightArrow": "Right and left arrow keys",
        "moveFocusByOneDay": "Move backward (left) and forward (right) by one day",
        "moveFocusByOneMonth": "Switch months",
        "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week",
        "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week",
        "openThisPanel": "Open this panel",
        "pageUpPageDown": "page up and page down keys",
        "questionMark": "Question mark",
        "returnFocusToInput": "Return to the date input field",
        "selectFocusedDate": "Select the date in focus",
        "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel",
        "upArrowDownArrow": "up and down arrow keys",
      }
    }
    placeholder="Start Date"
    readOnly={false}
    renderCalendarInfo={null}
    renderDay={null}
    renderMonth={null}
    reopenPickerOnClearDate={false}
    required={false}
    screenReaderInputMessage=""
    showClearDate={false}
    showDefaultInputIcon={true}
    withFullScreenPortal={false}
    withPortal={false}
  />
  <SingleDatePicker
    anchorDirection="right"
    customCloseIcon={null}
    customInputIcon={null}
    date={null}
    daySize={39}
    disabled={false}
    displayFormat={[Function]}
    enableOutsideDays={false}
    focused={false}
    hideKeyboardShortcutsPanel={true}
    horizontalMargin={0}
    id="date"
    initialVisibleMonth={null}
    isDayBlocked={[Function]}
    isDayHighlighted={[Function]}
    isOutsideRange={[Function]}
    isRTL={false}
    keepOpenOnDateSelect={false}
    monthFormat="MMMM YYYY"
    navNext={null}
    navPrev={null}
    numberOfMonths={1}
    onClose={[Function]}
    onDateChange={[Function]}
    onFocusChange={[Function]}
    onNextMonthClick={[Function]}
    onPrevMonthClick={[Function]}
    orientation="horizontal"
    phrases={
      Object {
        "chooseAvailableDate": [Function],
        "clearDate": "Clear Date",
        "closeDatePicker": "Close",
        "dateIsUnavailable": [Function],
        "enterKey": "Enter key",
        "escape": "Escape key",
        "hideKeyboardShortcutsPanel": "Close the shortcuts panel",
        "homeEnd": "Home and end keys",
        "jumpToNextMonth": "Move forward to switch to the next month",
        "jumpToPrevMonth": "Move backward to switch to the previous month",
        "keyboardNavigationInstructions": "Press the down arrow key to interact with the calendar and
        select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
        "keyboardShortcuts": "Keyboard Shortcuts",
        "leftArrowRightArrow": "Right and left arrow keys",
        "moveFocusByOneDay": "Move backward (left) and forward (right) by one day",
        "moveFocusByOneMonth": "Switch months",
        "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week",
        "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week",
        "openThisPanel": "Open this panel",
        "pageUpPageDown": "page up and page down keys",
        "questionMark": "Question mark",
        "returnFocusToInput": "Return to the date input field",
        "selectFocusedDate": "Select the date in focus",
        "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel",
        "upArrowDownArrow": "up and down arrow keys",
      }
    }
    placeholder="End Date"
    readOnly={false}
    renderCalendarInfo={null}
    renderDay={null}
    renderMonth={null}
    reopenPickerOnClearDate={false}
    required={false}
    screenReaderInputMessage=""
    showClearDate={false}
    showDefaultInputIcon={true}
    withFullScreenPortal={false}
    withPortal={false}
  />
  <div
    className="generateButton"
    onClick={[Function]}
  >
    GENERATE REPORT
  </div>
</div>
`;
